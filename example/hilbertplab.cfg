# network size
SIZE 364

# parameters of periodic execution
CYCLES 40
CYCLE 1

# parameters of message transfer
# delay values here are relative to cycle length, in percentage,
# eg 50 means half the cycle length, 200 twice the cycle length, etc.
MINDELAY 0
MAXDELAY 0
# drop is a probability, 0<=DROP<=1
DROP 0

#the amount of slots exchanged in each gossip phase
GOSSIP 20
#the size of each peer local view
VIEW 20
#the size of the sliver memory - how many peers' information sliver stores, in this case it is 10% of system size
SLIVERMEMORY SIZE / 3
#the number of slices the protocol is considering
SLICES 10


random.seed 1234567890
network.size SIZE
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE
#simulation.cycles CYCLES

################### protocols ===========================

protocol.hilbert protocols.Hilbert
protocol.hilbert.friction 10
protocol.hilbert.linkable cyclon
protocol.hilbert.step CYCLE
protocol.hilbert.transport tr
protocol.hilbert.slices SLICES
protocol.hilbert.memorylimit SLIVERMEMORY

protocol.urt UniformRandomTransport
protocol.urt.mindelay (CYCLE*MINDELAY)/100
protocol.urt.maxdelay (CYCLE*MAXDELAY)/100

protocol.tr UnreliableTransport
protocol.tr.transport urt
protocol.tr.drop DROP

#CYCLON

protocol.cyclon protocols.Cyclon
protocol.cyclon.cache VIEW
protocol.cyclon.gossip GOSSIP
protocol.cyclon.step CYCLE
protocol.cyclon.transport tr


################### initialization ======================

#
init.valssl initializers.InitializerHilbert
init.valssl.protocol hilbert
init.valssl.max_value 999999

init.0 peersim.dynamics.WireKOut
init.0.protocol cyclon
init.0.k 20

#
init.sch CDScheduler
init.sch.protocol cyclon hilbert
init.sch.randstart false

################ control ==============================

control.0s observers.StabilityObserver
control.0s.slicing hilbert
control.0s.slices SLICES
control.0s.step CYCLE
control.0s.prefix Hilbert

